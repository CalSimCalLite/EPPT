! 
!   XA COMMUNICATIONS AREA
!
      INTEGER(4) return_code , XAOSLSize , AuthCode , Rsrv1 , Rsrv2 , &
         CumXATime , LastTime , XAComArea , CallCount , &
         ProgArea ,  Rsrvd
      COMMON /XAOSLAREA/ &
        return_code , &  !  Return code            - returned       
        XAOSLSize , & !  Size of this structure - user supplied  
        AuthCode  , & !  Activation code        - Internal usage 
        Rsrv1  , &    !  Reserve 1                               
        Rsrv2  , &    !  Reserve 2                               
        CumXATime , & !  Cum time spent in XA routines           
        LastTime  , & !  Time spent in last function              
        XAComArea , & !  Pointer to XA communication area - returned 
        CallCount , & !  Number of XA function calls      - returned 
        ProgArea  , & !  Available to programmer          - user area  
        Rsrvd(13)   !  Reserved for later use                    
	
	

!
!         XA CALLBACK AREA
!
      DOUBLE PRECISION  Objective  , AmtInf  , IntSol , Dj , &
      	BestPosISol , LimitSearch , BBEstObjDelta , BarPObj , BarDObj 
!
      INTEGER * 4  XAInfoSize , Reserved , XAType , Terminate , Mask  , &
      	Iteration , Node , IntFrac , NumSol , CallerId , ThreadId , BBDirection , &
     	NumInf , In , Out , BBVar , BBPivot , BBPivotOp , XAOSLrc , &
     	PrgmArea  

      COMMON /XAINFOAREA/ &
        XAInfoSize , &   ! Size of this structure                
        Reserved  ,  &   ! Reserved for future use              
        Objective ,  &   ! Objective function value             
        AmtInf    ,  &   ! Sum of infeasibility                 
        IntSol    ,  &   ! Best integer solution found thus far  
        Dj        ,  &   ! Reduce cost of column entering basis  
        BestPosISol ,&   ! Best possible integer solution       
        LimitSearch ,&   ! Least possible integer solution     
        BBEstObjDelta , &! Est change in obj branching in 
        BarPObj   ,  &   ! Barrier primal objective function value 
        BarDObj   ,  &   ! Barrier dual objective function      
        XAType    ,  &   !   0 - the beginning
                         !   1 - infeasible iteration
                         !   2 - feasible iteration
                         !   3 - integer node generated
                         !   4 - integer solution found
                         !   5 - user selects b & b variable
                         !   6 - barrier iteration  
                         !   9 - the end 
        Terminate ,  &   ! 0-Continue  1-Terminate Solver     
        Mask     ,   &   ! Masking bits                       
        Iteration ,  &   ! Iteration count                    
        Node      ,  &   ! Current node                       
        IntFrac   ,  &   ! No. integer's which are fractional 
        NumSol    ,  &   ! No. integer solutions found        
        CallerId  ,  &   ! Caller Id                          
        ThreadId  ,  &   ! Thread Id                          
        BBDirection ,&   !  0 - branch BBVar down   1 - branch BBVar up 
        NumInf    ,  &   ! Number of infeasibilities 
        In       ,   &   ! Column entering basis     
        Out      ,   &   ! Column leaving basis      
        BBVar     ,  &   ! Candicate variable to branch  
        BBPivot   ,  &   ! Variable to replace BBVar     
        BBPivotOp ,  &   ! Variable to replace BBVar when backtracking 
        XAOSL    ,   &   ! Caller's rc variable (address)    
        PrgmArea         ! Available to programmer        

!
!         XAMODEL STRUCTURE
!

      DOUBLE PRECISION  XAMlpobj , XAMipobj , XAMBestPosISol
      INTEGER * 4 XAModelSize , XAMRsrv3 , XAMversion , XAMiteration , &
        XAMnonzero , XAMlptime , XAMiptime , XAMcallerid ,XAMthreadid , & 
        XAMhandle  ,  XAMmemoryused , XAMnodedepth , XAMnodecount , & 
        XAMnodebasismemory , XAMcolumn ,  XAMbv,  XAMgenint , &
        XAMsemi_1 , XAMsemi_2 ,XAMlast_column , &
        XAMrow  , XAMpcttime  , XAMPrgmArea , XAMAdrs               
     INTEGER * 4  XAMrn_len , XAMcn_len  
     COMMON /XAMODELAREA/ &
        XAModelSize ,     &! Size of this structure          
        XAMReserved  ,    &! 
        XAMlpobj     ,    &! Objective function value         
        XAMipobj     ,    &! Best integer solution found      
        XAMBestPosISol ,  &! Best Possible Solution    
        XAMversion   ,    &! x00 - row short & col long  4/1/94 
        XAMiteration ,    &! Number of iterations             
        XAMnonzero   ,    &! Number of nonzeros               
        XAMlptime    ,    &! LP solution time (wall) seconds. 
        XAMiptime    ,    &! IP solution time (wall) seconds. 
        XAMcallerid  ,    &! Caller Id                        
        XAMthreadid  ,    &! Thread Id                        
        XAMhandle    ,    &! Handle to XA Message Window, else 0  
        XAMmemoryused ,   &! Memory used in K Bytes           
        XAMnodedepth ,    &! Maximun node depth               
        XAMnodecount ,    &! Total number of nodes            
        XAMnodebasismemory , & ! Number of node basis in memory 
        XAMcolumn    ,    &! Number of columns                
        XAMbv        ,    &! Number of binary columns         
        XAMgenint    ,    &! Number of integer columns        
        XAMsemi_1    ,    &! Number of semi-continuous type 1 
        XAMsemi_2    ,    &! Number of semi-continuous type 2 
        XAMlast_column ,  & ! Last column requesting info     
        XAMrow       ,    &! Number of rows                   
        XAMpcttime  ,     &! Est % Time spent in XA routines   
        XAMrn_len    ,    &! Row name length     bytes/name 
        XAMcn_len    ,    &! Column name length  bytes/name 
        XAMPrgmArea  ,    &! Available to programmer           
        XAMAdrs(30) 

      CHARACTER * 18 ROWNAM 
      CHARACTER * 20 COLNAM
      DOUBLE PRECISION TCOEF
      COMMON /XABUFRCC/ NORCCITEMS,IFILLER,TCOEF(1000), &
        ROWNAM(1000),COLNAM(1000)
      
!     Miscellanous supporting variables
!     Use Integer * 4 for Compaq TRU64 
!     INTEGER   * 4  FRC , MODSTS , SOLSTS , RowNameSize , ColNameSize
      INTEGER   * 2  FRC , MODSTS , SOLSTS , RowNameSize , ColNameSize
      INTEGER   * 4  MaxRow,MaxCol,MaxNzr
      COMMON /XAMISC/ &
        MaxRow , MaxCol , MaxNzr , RowNameSize , ColNameSize , &
        FRC , MODSTS , SOLSTS