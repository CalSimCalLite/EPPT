<x-rich>Here is what you'll need to install in order to completely build CALSIM.  I am assuming that the reader is an experienced PC user and programmer.


<paraindent><param>out</param>1.  The LIB.EXE program from Microsoft Visual C++.  If you don't have it already, I have packaged this and its components into a file \\swampy\dudley\libstuff.zip.  Extract it into some directory that is on your search path. 

2.  JavaCC.  Double-click on \\swampy\dudley\javacc.zip and extract it to your C: root directory.  Add c:\program files\javacc\bin to your PATH variable.

3.  Install Java JDK 1.1 and Lahey LF90.

4.  Go to your Lahey install directory and edit the msvc.lnk file.  Mine is in c:\lf9045\bin\msvc.lnk.  Change the -libpath to point to your lib.exe program

5.  Obtain the source files.  You will find them at \\swampy\dudley\v0.50 for the prerelease version 0.4, bug-fix revison 3.  Copy the whole tree.

6.  Look at the source directory.  To make a redistributable version, I just plac e the bin and src subdirectories into a zip file.  You can use this using the Java Archive command very easily.  Just cd to the v0.50 directory and say, jar cvf ..\release\calsim_0.50.zip bin src


The Fortran source code is in SimSolver, Wrangler, and calsim_main.


The Java functionality is entirely within WreslCoder.


</paraindent>Each of the Fortran directories use the Lahey automake command.  Just type am to create each component.  When successful, there is a handy batch file called install.bat that is used to copy the executable items into the bin and src directories.


WreslCoder is more complicated.  There are two packages, wresl and calsim, which are in their own directories.  There are also the CalsimExec* classes, which are not part of a package, in the WreslCoder directory.  It is easy to produce the wresl.jar file that is used by the CALSIM executable.  A handy file called install.bat is used to combine all the resulting *.class files into this JAR, which is then copied into the bin directory.


The class wresl.WreslParser and several other support classes are not intended to be edited.  There is a message to this effect at the top of each one.  Rather, these java files are created by the JavaCC processor.  This program accepts one file as input:  wresl.jj.  Change to the wresl subdirectory and say, "javacc wresl.jj".  Then cd .. and say, "javac wresl\WreslParser.java" to create these class files.

</x-rich>
